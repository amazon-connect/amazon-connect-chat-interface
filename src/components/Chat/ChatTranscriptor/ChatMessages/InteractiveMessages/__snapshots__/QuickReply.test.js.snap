// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<QuickReply /> Style should match the snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c2 {
  font-size: 1em;
  line-height: 1.465;
  font-weight: normal;
  font-family: Arial,Helvetica,"sans-serif",Helvetica,sans-serif;
  padding: 0;
  white-space: nowrap;
  color: #111111;
  cursor: pointer;
  text-align: center;
  vertical-align: middle;
  border-width: 0px;
  border-style: solid;
  padding-right: 10px;
  padding-left: 10px;
  font-family: Arial,Helvetica,"sans-serif";
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-width: 260px;
  background: linear-gradient(#FFFFFF,#FFFFFF 80%,#FFFFFF);
  border-color: #fff #fff #fff;
  background: linear-gradient(#FFFFFF,#FFFFFF 80%,#FFFFFF);
  border-color: #fff #fff #fff;
  color: undefined;
  padding-top: 0.45rem;
  padding-bottom: 0.45rem;
  font-size: 0.875rem;
  box-shadow: 1px 2px 3px 0px rgba(0,0,0,0.1);
}

.c2:hover {
  background: linear-gradient(#fff,#f9f9f9);
}

.c2:focus {
  box-shadow: 0 0 2px 0 #E77600;
  outline: none;
}

.c2:active {
  border-color: #fff #fff #fff;
}

.c2:disabled {
  cursor: not-allowed;
  opacity: 0.7;
  outline: none;
  pointer-events: none;
}

.c2:disabled:hover {
  background: linear-gradient(#FFFFFF,#FFFFFF 80%,#FFFFFF);
}

.c2 > img,
.c2 .loader {
  margin-right: undefined;
  position: relative;
  top: 1px;
}

.c2:hover {
  background: linear-gradient(#fff,#f9f9f9);
}

.c2:focus {
  box-shadow: 0 0 2px 0 #E77600;
  outline: none;
}

.c2:active {
  border-color: #fff #fff #fff;
}

.c2:disabled {
  cursor: not-allowed;
  opacity: 0.7;
  outline: none;
  pointer-events: none;
}

.c2:disabled:hover {
  background: linear-gradient(#FFFFFF,#FFFFFF 80%,#FFFFFF);
}

.c0 {
  border: 1px solid #DDDDDD;
  border-radius: 6px;
  background: #EDEDED;
  padding: 14px;
  position: relative;
}

.c0:after {
  display: block;
  content: " ";
  position: absolute;
  left: -6px;
  bottom: 4px;
  border-radius: 2px;
  border-left: 10px solid transparent;
  border-right: 12px solid transparent;
  border-bottom: 9px solid #EDEDED;
}

.c0 button {
  cursor: pointer;
  border: 1px solid #DDDDDD;
}

.c0 button:hover:enabled {
  color: #fff;
  background: #06adcb;
}

.c1 {
  padding: 14px 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  gap: 6px;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c3 {
  padding: 4px 14px;
  text-align: left;
  cursor: pointer;
  border: 2px solid #077398;
  border-radius: 2px;
  white-space: pre-wrap;
  font-weight: bold;
  font-size: 0.875rem;
  line-height: 22px;
  font-weight: 600;
  font-style: normal;
  color: #077398;
  background: #FFFFFF;
  text-shadow: none;
  box-shadow: none;
}

.c3:hover,
.c3:focus {
  background: #077398;
  color: #FFFFFF;
  border: 2px solid #077398 !important;
}

<body>
    <div>
      <div
        class="c0"
        data-testid="interactive-quickreply-message-title"
      >
        <p
          style="margin: 0px;"
        >
          How was your experience?
        </p>
      </div>
      <div
        class="c1"
        data-testid="interactive-quickreply-response-section"
      >
        <button
          class="c2 c3"
          data-selected="false"
          type="default"
        >
          Great!
        </button>
        <button
          class="c2 c3"
          data-selected="false"
          type="default"
        >
          Good
        </button>
        <button
          class="c2 c3"
          data-selected="false"
          type="default"
        >
          Ok
        </button>
        <button
          class="c2 c3"
          data-selected="false"
          type="default"
        >
          Poor
        </button>
        <button
          class="c2 c3"
          data-selected="false"
          type="default"
        >
          Terrible!
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-kgAjT jelqub"
      data-testid="interactive-quickreply-message-title"
    >
      <p
        style="margin: 0px;"
      >
        How was your experience?
      </p>
    </div>
    <div
      class="sc-dNLxif ijXeIm"
      data-testid="interactive-quickreply-response-section"
    >
      <button
        class="sc-hMqMXs jEknEr sc-jqCOkK dEJQyU"
        data-selected="false"
        type="default"
      >
        Great!
      </button>
      <button
        class="sc-hMqMXs jEknEr sc-jqCOkK dEJQyU"
        data-selected="false"
        type="default"
      >
        Good
      </button>
      <button
        class="sc-hMqMXs jEknEr sc-jqCOkK dEJQyU"
        data-selected="false"
        type="default"
      >
        Ok
      </button>
      <button
        class="sc-hMqMXs jEknEr sc-jqCOkK dEJQyU"
        data-selected="false"
        type="default"
      >
        Poor
      </button>
      <button
        class="sc-hMqMXs jEknEr sc-jqCOkK dEJQyU"
        data-selected="false"
        type="default"
      >
        Terrible!
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
